{"version":3,"file":"static/js/893.86355152.chunk.js","mappings":"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","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SectionWrapper = styled.div`\n    padding: 20px;\n    margin: 20px 0;\n    border: 1px solid green;\n    border-radius: 4px;\n`;\n\nexport const Title = styled.h2`\n    font-size: 24px;\n    margin-bottom: 10px;\n    color: green;\n    text-align: center;\n    text-transform: uppercase;\n`;","import React from 'react';\nimport { SectionWrapper, Title } from './Section.styled';\nimport PropTypes from 'prop-types';\n\nexport const Section = ({ title, children }) => {\n    return (\n        <SectionWrapper>\n            <Title>{title}</Title>\n            {children}\n        </SectionWrapper>\n    );\n};\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.any.isRequired,\n};","import styled from 'styled-components';\n\nexport const Form = styled.form`\n    display: flex;\n    flex-direction: column;\n    max-width: 400px;\n    margin: 0 auto;\n    padding: 10px;\n    border: 1px solid green;\n`;\n\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    font-size: 16px;\n    margin-bottom: 8px;\n`;\n\nexport const Input = styled.input`\n    padding: 8px;\n    font-size: 16px;\n    margin-bottom: 16px;\n    border: 1px solid green;\n`;\n\nexport const Button = styled.button`\n    padding: 8px 16px;\n    font-size: 16px;\n    background-color: green;\n    color: #fff;\n    border: none;\n    cursor: pointer;\n`;\n\nexport const ErrorMessage = styled.p`\n    color: green;\n    font-size: 14px;\n    margin-top: 4px;\n`;","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from \"redux/operations\";\nimport { selectAllContacts } from \"redux/selectors\";\n\nimport {\n    Form,\n    Label,\n    Input,\n    Button,\n} from './ContactForm.styled';\n\nexport const ContactForm = () => {\n    const [formData, setFormData] = useState({ name: '', number: '' });\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectAllContacts);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prevData => ({\n            ...prevData,\n            [name]: value,\n        }));\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const existingContact = contacts.find(\n            contact => contact.name.toLowerCase() === formData.name.toLowerCase());\n        \n        if (existingContact) {\n            alert(`${formData.name} is already in contacts.`);\n            return;\n        }\n\n        dispatch(addContact(formData));\n        \n        setFormData({ name: '', number: '' });\n    };\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Label>\n                <span>\n                    Name\n                </span>\n                <Input\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Za-яА-Я]+([' \\-][a-zA-Za-яА-Я]+)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    value={formData.name}\n                    onChange={handleChange}\n                />\n            </Label>\n            <Label>\n                <span>\n                    Number\n                </span>\n                <Input\n                    type=\"tel\"\n                    name=\"phone\"\n                    pattern=\"\\+?\\d{1,4}?[.\\-\\s]?\\(?\\d{1,3}?\\)?[.\\-\\s]?\\d{1,4}[.\\-\\s]?\\d{1,4}[.\\-\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    value={formData.number}\n                    onChange={handleChange}\n                />\n            </Label>\n            <Button type=\"submit\">Add Contact</Button>\n        </Form>\n    );\n};","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n    margin-bottom: 16px;\n    text-align: center;\n`;\n\nexport const FilterLabel = styled.label`\n    display: block;\n    font-size: 16px;\n    margin-bottom: 8px;\n    color: green;\n`;\n\nexport const FilterInput = styled.input`\n    padding: 8px;\n    font-size: 16px;\n    margin-top: 4px;\n    border: 1px solid green;\n`;","import React from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from \"redux/filterSlice\";\nimport { selectFilter } from \"redux/selectors\";\nimport {\n    FilterContainer,\n    FilterLabel,\n    FilterInput,\n} from './Filter.styled';\n\nexport const Filter = () => {\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    return (\n        <FilterContainer>\n            <FilterLabel>\n                Find contacts by name\n            </FilterLabel>\n            <FilterInput type=\"text\" value={filter} onChange={(e)=> dispatch(setFilter(e.target.value))} />\n        </FilterContainer>\n    );\n};","import styled from 'styled-components';\n\nexport const ContactListContainer = styled.ul`\n    list-style: square;\n    padding: 0;\n`;\n\nexport const ContactListItem = styled.li`\n    display: flex;\n    justify-content: center;\n    gap: 30px;\n    align-items: center;\n    padding: 8px;\n    border-bottom: 1px solid green;\n\n    &:last-child {\n        border-bottom: none;\n    }\n`;\n\nexport const DeleteButton = styled.button`\n    padding: 4px 8px;\n    background-color: green;\n    color: #fff;\n    border: none;\n    cursor: pointer;\n\n    &:hover {\n        background-color:  white;\n    }\n`;","import React from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from \"redux/operations\";\nimport { selectFilteredContacts } from \"redux/selectors\";\nimport {\n    ContactListContainer,\n    ContactListItem,\n    DeleteButton,\n} from './ContactList.styled';\n\nexport const ContactList = () => {\n    const contacts = useSelector(selectFilteredContacts); \n    const dispatch = useDispatch();\n\n    return (\n        <ContactListContainer>\n            {contacts && contacts.map((contact) => (\n                <ContactListItem key={contact.id}>\n                    {contact.name} - {contact.number}\n                    <DeleteButton type=\"button\" onClick={() => dispatch(deleteContact(contact.id))}>\n                        Delete\n                    </DeleteButton>\n                </ContactListItem>\n            ))}\n        </ContactListContainer>\n    );\n};","import styled from 'styled-components';\n\nexport const HeaderWrapper = styled.header`\n    color: green;\n    padding: 20px;\n    text-align: center;\n`;","import React from 'react';\nimport { HeaderWrapper } from './Header.styled';\nimport PropTypes from 'prop-types';\n\nexport const Header = ({ title }) => {\n    return (\n        <HeaderWrapper>\n            <h1>{title}</h1>\n        </HeaderWrapper>\n    );\n};\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n};","import React from 'react';\nimport { Section } from 'components/Section/Section';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Header } from 'components/Header/Header';\n\nconst Contacts = () => {\n    return (\n        <Section title=\"PhoneBook\">\n            <ContactForm />\n            <Header title=\"Contacts\" />\n            <Filter />\n            <ContactList />\n        </Section>\n    );\n}\n\nexport default Contacts;"],"names":["SectionWrapper","styled","Title","Section","title","children","Form","Label","Input","Button","ContactForm","useState","name","number","formData","setFormData","dispatch","useDispatch","contacts","useSelector","selectAllContacts","handleChange","e","target","value","prevData","onSubmit","preventDefault","find","contact","toLowerCase","alert","addContact","type","pattern","required","onChange","FilterContainer","FilterLabel","FilterInput","Filter","filter","selectFilter","setFilter","ContactListContainer","ContactListItem","DeleteButton","ContactList","selectFilteredContacts","map","onClick","deleteContact","id","HeaderWrapper","Header"],"sourceRoot":""}